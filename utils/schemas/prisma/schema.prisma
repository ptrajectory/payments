// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id              String          @id
  first_name      String
  last_name       String
  email           String
  meta            Json?
  created_at      DateTime        @default(now())
  updated_at      DateTime        @updatedAt
  payment_methods PaymentMethod[]
  checkouts       Checkout[]
  carts           Cart[]
  payments        Payment[]
}

model PaymentMethod {
  id           String     @id
  customer     Customer?  @relation(fields: [customer_id], references: [id])
  customer_id  String?
  type         String
  phone_number String
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  checkouts    Checkout[]
  payments     Payment[]
}

model Checkout {
  id                String         @id
  amount            Float
  currency          String
  status            String
  customer          Customer?      @relation(fields: [customer_id], references: [id])
  customer_id       String?
  payment_method    PaymentMethod? @relation(fields: [payment_method_id], references: [id])
  payment_method_id String?
  created_at        DateTime       @default(now())
  updated_at        DateTime       @updatedAt
  cart              Cart?          @relation(fields: [cart_id], references: [id])
  cart_id           String?        @unique
  payments          Payment[]
}


model Product {
  id String @id 
  name String? 
  description String?  
  price Float? @default(0.0)
  image String? 
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  carts CartItem[]
}

model Cart {
  id String @id 
  customer Customer? @relation(fields: [customer_id], references: [id])
  customer_id String? 
  items CartItem[]
  checkout Checkout?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CartItem {
  id String @id 
  cart Cart? @relation(fields: [cart_id], references: [id])
  cart_id String?
  product Product? @relation(fields: [product_id], references: [id])
  product_id String?
  quantity Int @default(1)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}


model Payment {
  id String @id
  amount Float 
  token String
  status String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  payment_method PaymentMethod @relation(fields: [payment_method_id], references: [id])
  payment_method_id String
  checkout_id String
  checkout Checkout @relation(fields: [checkout_id], references: [id])
  customer_id String 
  customer Customer @relation(fields: [customer_id], references: [id])
}
